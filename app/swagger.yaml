openapi: 3.0.0
servers:
  - url: /v1
info:
  description: MRA Content Service API
  version: "1.0.0-oas3"
  title: MRA Content Service API
  contact:
    name: Aidan Carson
    email: aidan.carson@nginx.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /:
    get:
      responses:
        '200':
          description: A simple string response
          content:
            '*/*':
              schema:
                type: string
  /v1/content:
    get:
      tags:
        - article
      summary: Fetch all articles
      responses:
        '200':
          description: Return all articles
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
      x-tags:
        - tag: article
      x-operationId: Articles
    post:
      tags:
        - article
      summary: Create new article
      responses:
        '200':
          description: return article id
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  example: '[58bb0c8e-daa6-48ee-b7a3-2ada5c133fc8]'
      x-tags:
        - tag: article
      x-operationId: NewArticle
      requestBody:
        $ref: '#/components/requestBodies/Article'
  '/v1/content/{articleId}':
    get:
      tags:
        - article
      summary: Fetch single article based on id
      parameters:
        - name: articleId
          in: path
          description: The id of article to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return single article
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    put:
      tags:
        - article
      summary: Update existing article
      parameters:
        - name: articleId
          in: path
          description: The id of article to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Update'
      x-tags:
        - tag: article
      x-operationId: ReplaceArticle
      requestBody:
        $ref: '#/components/requestBodies/Article'
    delete:
      tags:
        - article
      summary: Delete single article
      parameters:
        - name: articleId
          in: path
          description: The id of article to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                type: object
      x-tags:
        - tag: article
      x-operationId: DeleteArticle
  '/v1/content/{articleId}/{element}/{newValue}':
    patch:
      tags:
        - article
      summary: Update element of article
      parameters:
        - name: articleId
          in: path
          description: The id of article that needs to be fetched.
          required: true
          schema:
            type: string
        - name: element
          in: path
          description: The element of the article that needs to be updated.
          required: true
          schema:
            type: string
        - name: newValue
          in: path
          description: The updated value of the element.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Update'
      x-tags:
        - tag: article
      x-operationId: UpdateArticle
components:
  schemas:
    Article:
      type: object
      properties:
        Id:
          type: string
        Date:
          type: string
        Location:
          type: string
        Author:
          type: string
        Photo:
          type: string
        Title:
          type: string
        Extract:
          type: string
        Body:
          type: string
    Update:
      type: object
      properties:
        Inserted:
          type: integer
        Updated:
          type: integer
        Unchanged:
          type: integer
        Replaced:
          type: integer
        Renamed:
          type: integer
        Skipped:
          type: integer
        Deleted:
          type: integer
        Created:
          type: integer
        DBsCreated:
          type: integer
        TablesCreated:
          type: integer
        Dropped:
          type: integer
        DBsDropped:
          type: integer
        TablesDropped:
          type: integer
        GeneratedKeys:
          type: array
          items:
            type: string
        FirstError:
          type: string
        ConfigChanges:
          type: string
        Changes:
          type: string
  requestBodies:
    Article:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Article'
      description: New article object
      required: true